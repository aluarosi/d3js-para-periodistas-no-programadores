{
  "name": "csv",
  "version": "0.4.0",
  "description": "CSV parser with simple api, full of options and tested against large datasets.",
  "homepage": "http://www.adaltas.com/projects/node-csv/",
  "bugs": {
    "url": "https://github.com/wdavidw/node-csv/issues"
  },
  "author": {
    "name": "David Worms",
    "email": "david@adaltas.com",
    "url": "http://www.adaltas.com"
  },
  "contributors": [
    {
      "name": "David Worms",
      "email": "david@adaltas.com",
      "url": "http://www.adaltas.com"
    }
  ],
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/wdavidw/node-csv/blob/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">= 0.1.90"
  },
  "main": "./lib",
  "keywords": [
    "node",
    "parser",
    "csv"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/wdavidw/node-csv.git"
  },
  "dependencies": {
    "csv-generate": "*",
    "csv-parse": "*",
    "stream-transform": "*",
    "csv-stringify": "*"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "scripts": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/wdavidw/node-csv.png)](http://travis-ci.org/wdavidw/node-csv)\n\n<pre>\n     _   _           _        _____  _______      __\n    | \\ | |         | |      / ____|/ ____\\ \\    / /\n    |  \\| | ___   __| | ___ | |    | (___  \\ \\  / / \n    | . ` |/ _ \\ / _` |/ _ \\| |     \\___ \\  \\ \\/ /  \n    | |\\  | (_) | (_| |  __/| |____ ____) |  \\  /   \n    |_| \\_|\\___/ \\__,_|\\___| \\_____|_____/    \\/     New BSD License\n\n</pre>\n\nThis project provides CSV generation, parsing, transformation and serialization.\nIt has been tested and used on by a large community over the years and should be\nconsidered reliable. It provides every option you would expect from an advanced \nCSV parser and stringifier.\n\n[![NPM](https://nodei.co/npm/csv.png?stars&downloads)](https://nodei.co/npm/csv/) [![NPM](https://nodei.co/npm-dl/csv.png)](https://nodei.co/npm/csv/)\n\nThe project is splitted into 4 packages:   \n\n*   [`csv-generate`](https://github.com/wdavidw/node-csv-generate), a flexible generator of CSV string and Javascript objects.   \n*   [`csv-parse`](https://github.com/wdavidw/node-csv-parse), a parser converting CSV text into arrays or objects.   \n*   [`stream-transform`](https://github.com/wdavidw/node-stream-transform), a transformation framework.\n*   [`csv-stringify`](https://github.com/wdavidw/node-csv-stringify), a stringifier converting records into a CSV text.   \n\nThe full documentation for the current version 0.4 isn't yet available other\nthen the links to the README provided just above. The \n[official documentation][website] still cover the version 0.3.\n\n## Call for feedback\n\nThe redesign is an important step forward for this package. A lot of sugar has\nbeen removed in favor of straightforward implementations of the Stream API into\nthe 4 sub-packages.\n\nWe now need your input. Help us with the documentation, write your impressions\ndiscuss additionnal APIs.\n\n## Usage\n\nInstallation command is `npm install csv`.\n\nEach modules are fully be compatible with the stream 2 and 3 specifications.\nAlso, a simple callback-based API is alwasy provided for conveniency.\n\n### Callback example\n\nExecute this script with the command `node samples/callback.js`.\n\n```javascript\nvar csv = require('csv');\n\ncsv.generate({seed: 1, columns: 2, length: 20}, function(err, data){\n  csv.parse(data, function(err, data){\n    csv.transform(data, function(data){\n      return data.map(function(value){return value.toUpperCase()});\n    }, function(err, data){\n      csv.stringify(data, function(err, data){\n        process.stdout.write(data);\n      });\n    });\n  });\n});\n```\n\n### Stream example\n\nExecute this script with the command `node samples/stream.js`.\n\n```javascript\nvar csv = require('csv');\n\nvar generator = csv.generate({seed: 1, columns: 2, length: 20});\nvar parser = csv.parse();\nvar transformer = csv.transform(function(data){\n  return data.map(function(value){return value.toUpperCase()});\n});\nvar stringifier = csv.stringify();\n\ngenerator.on('readable', function(){\n  while(data = generator.read()){\n    parser.write(data);\n  }\n});\n\nparser.on('readable', function(){\n  while(data = parser.read()){\n    transformer.write(data);\n  }\n});\n\ntransformer.on('readable', function(){\n  while(data = transformer.read()){\n    stringifier.write(data);\n  }\n});\n\nstringifier.on('readable', function(){\n  while(data = stringifier.read()){\n    process.stdout.write(data);\n  }\n});\n```\n\n### Pipe example\n\nExecute this script with the command `node samples/pipe.js`.\n    \n```javascript\nvar csv = require('csv');\n\ncsv.generate  ({seed: 1, columns: 2, length: 20}).pipe(\ncsv.parse     ()).pipe(\ncsv.transform (function(record){\n                return record.map(function(value){return value.toUpperCase()});\n              })).pipe(\ncsv.stringify ()).pipe(process.stdout);\n```\n\nMigration\n---------\n\nThis README covers the current version 0.2.x of the `node \ncsv `parser. The documentation for the previous version (0.1.0) is \navailable [here](https://github.com/wdavidw/node-csv/tree/v0.1). The \ndocumentation for the incoming 0.3.x version is not yet released.\n\nThe functions 'from*' and 'to*' are now rewritten as 'from.*' and 'to.*'. The 'data'\nevent is now the 'record' event. The 'data' now receives a stringified version \nof the 'record' event.\n\nThe documentation for olders version are available on GitHub: \n[0.1.x](https://github.com/wdavidw/node-csv/tree/v0.1), \n[0.2.x](https://github.com/wdavidw/node-csv/tree/v0.2).\n\nDevelopment\n-----------\n\nTests are executed with mocha. To install it, simple run `npm install`, it will\ninstall mocha and its dependencies in your project \"node_modules\" directory.\n\nTo run the tests:\n```bash\nnpm test\n```\n\nThe tests run against the CoffeeScript source files.\n\nTo generate the JavaScript files:\n```bash\nmake build\n```\n\nThe test suite is run online with [Travis][travis] against Node.js version 0.6, 0.7, 0.8 and 0.9.\n\nContributors\n------------\n\n*   David Worms: <https://github.com/wdavidw>\n\nRelated projects\n----------------\n\n*   Pavel Kolesnikov \"ya-csv\": <http://github.com/koles/ya-csv>\n*   Chris Williams \"node-csv\": <http://github.com/voodootikigod/node-csv>\n\n[travis]: https://travis-ci.org/#!/wdavidw/node-csv\n[website]: http://www.adaltas.com/projects/node-csv/\n\n",
  "readmeFilename": "README.md",
  "_id": "csv@0.4.0",
  "_shasum": "3738bbcac91eee3c090aabc0b071f109ed9421f0",
  "_from": "csv@^0.4.0",
  "_resolved": "https://registry.npmjs.org/csv/-/csv-0.4.0.tgz"
}
